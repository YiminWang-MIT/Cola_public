# Makefile for bison
# Copyright (C) 1988, 1989, 1991, 1993 Bob Corbett and Free Software Foundation, Inc.
# 
# This file is part of Bison, the GNU Compiler Compiler.
# 
# Bison is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
# 
# Bison is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Bison; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

#### Start of system configuration section. ####

srcdir = @srcdir@
VPATH = @srcdir@

include	../Makefile.inc

MAKEINFO = makeinfo

# Things you might add to DEFS:
# -DSTDC_HEADERS	If you have ANSI C headers and libraries.
# -DHAVE_STRING_H	If you don't have ANSI C headers but have string.h.
# -DHAVE_MEMORY_H	If you don't have ANSI C headers and have memory.h.
# -DHAVE_STRERROR	If you have strerror function.
DEFS = @DEFS@
OPTS = @OPTS@

CFLAGS = $(OPTS) -O2
LDFLAGS = $(OPTS)

LIBS = @LIBS@

# Some System V machines do not come with libPW.  If this is true, use
# the GNU alloca.o here.
ALLOCA = @ALLOCA@

prefix = @prefix@
exec_prefix = @exec_prefix@

# where the installed binary goes
bindir = $(exec_prefix)/bin

# where the parsers go
datadir = $(exec_prefix)/lib

# where the info files go
infodir = $(prefix)/info

# where manual pages go and what their extensions should be
manext = 1
mandir = $(prefix)/man/man$(manext)

#### End of system configuration section. ####

SHELL = /bin/sh

# This rule allows us to supply the necessary -D options
# in addition to whatever the user asks for.
.c.o:
	$(CC) -c $(DEFS) -I$(srcdir)/../include $(CPPFLAGS) $(CFLAGS) $<

# names of parser files
PFILE	= bison.cc
PFILE1	= bison.hairy
HFILE	= bison.h

PFILES = -DXPFILE=\"$(datadir)/$(PFILE)\" \
	 -DXHFILE=\"$(datadir)/$(HFILE)\" \
	 -DXPFILE1=\"$(datadir)/$(PFILE1)\"

OBJECTS = lr0.o allocate.o closure.o conflict.o derives.o files.o getargs.o \
	  gram.o lalr.o lex.o main.o nullable.o output.o print.o reader.o \
	  reduce.o symtab.o warshall.o version.o getopt.o getopt1.o $(ALLOCA)

SUBDIR	= $(notdir $(srcdir))

all: Bison++ bison.info

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

configure: configure.in
	cd $(srcdir); autoconf

clean:
	rm -f *.o core Bison++

mostlyclean: clean

distclean: clean
	rm -f Makefile config.status

realclean: distclean
	rm -f TAGS *.info*

# Most of these deps are in case using RCS.
install: all bison++.1 bison.1 $(srcdir)/$(PFILE) $(srcdir)/$(PFILE1) $(srcdir)/$(HFILE) installdirs uninstall
	$(INSTALL_PROGRAM) Bison++ $(bindir)/Bison++
	-cd $(datadir); rm -f $(PFILE) $(HFILE)
	$(INSTALL_DATA) $(srcdir)/$(PFILE) $(datadir)/$(PFILE)
	$(INSTALL_DATA) $(srcdir)/$(HFILE) $(datadir)/$(HFILE)
	-chmod a+r $(datadir)/$(PFILE) $(datadir)/$(HFILE) 
	-$(INSTALL_DATA) $(srcdir)/bison++.1 $(mandir)/bison++.$(manext)
	-chmod a+r $(mandir)/bison++.$(manext)

# Make sure all installation directories, e.g. $(bindir) actually exist by
# making them if necessary.
installdirs:
	-sh $(srcdir)/mkinstalldirs $(bindir) $(datadir) $(libdir) $(infodir) $(mandir)

uninstall:
	rm -f $(bindir)/Bison++
	-cd $(datadir); rm -f $(PFILE) $(HFILE)
	rm -f $(mandir)/bison++.$(manext)

Bison++: $(OBJECTS)
	$(CC) $(LDFLAGS) -o $@ $(OBJECTS) $(LIBS)

bison.info: bison.texinfo
	$(MAKEINFO) $(srcdir)/bison.texinfo

TAGS: *.c *.h
	etags *.c *.h

# This file is different to pass the parser file names to the compiler.
files.o: files.c
	$(CC) -c $(PFILES) $(DEFS) $(CPPFLAGS) $(CFLAGS) \
	   $(srcdir)/files.c $(OUTPUT_OPTION)

lr0.o: system.h machine.h new.h gram.h state.h
closure.o: system.h machine.h new.h gram.h
conflict.o: system.h machine.h new.h files.h gram.h state.h
derives.o: system.h new.h types.h gram.h
files.o: system.h files.h new.h gram.h
getargs.o: system.h files.h
lalr.o: system.h machine.h types.h state.h new.h gram.h
lex.o: system.h files.h symtab.h lex.h
main.o: system.h machine.h
nullable.o: system.h types.h gram.h new.h
output.o: system.h machine.h new.h files.h gram.h state.h
print.o: system.h machine.h new.h files.h gram.h state.h
reader.o: system.h files.h new.h symtab.h lex.h gram.h
reduce.o: system.h machine.h files.h new.h gram.h
symtab.o: system.h new.h symtab.h gram.h
warshall.o: system.h machine.h

# Prevent GNU make v3 from overflowing arg limit on SysV.
.NOEXPORT:
