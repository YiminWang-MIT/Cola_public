#define PI      3.141592653589793
#define radiant (PI/180)
#define degree  (180/PI)

#define mass_proton   0.93827231
#define mass_pi0      0.1349764
#define mass_electron 0.00051199
//-----------------------------------------------------------------------------
// Include rawdata histograms
//-----------------------------------------------------------------------------
#define Spectrometer A
#define sp "Spec. A/"
#define adcrange "ADC Counts",0,1500,150
#define adcrangeA "ADC Counts",0,1500,150
#define drifttimerange "t","ns",1,512,511
#include "rawdefs.col"
//-----------------------------------------------------------------------------
#define Spectrometer B
#define adcrange "ADC Counts",0,3750,100
#define drifttimerange "t","ns",1,512,511
#define sp "Spec. B/"
#include "rawdefs.col"
//-----------------------------------------------------------------------------
#define Spectrometer C
#define sp "Spec. C/"
#define adcrange "ADC Counts",0,3750,100
#define drifttimerange "t","ns",1,4096,4095
#include "rawdefs.col"
//-----------------------------------------------------------------------------
// Access to Particles and Setup:
//-----------------------------------------------------------------------------
Fourvector Electron_in  = Beam		              // predefined function
Fourvector Proton       = SpectrometerA(mass_proton)  // predefined function
Fourvector Target       = {mass_proton}               // That's Liquid Hydrogen

#if #spectrometer(B)
Fourvector Electron_out = SpectrometerB(mass_electron)// predefined function
Scalar rawtime1         = @abc_2.a.coinc.a_b_time_1
Scalar rawtime2         = @abc_2.a.coinc.a_b_time_2
Scalar rawtime3         = @abc_2.a.coinc.a_b_time_3
Scalar rawtime          = @abc_2.a.coinc.a_b_time_1
Scalar coincidenceTime  = @online.abcorr
Scalar Electron_Trigger = @online.B.trigger
#endif

#if #spectrometer(C)
Fourvector Electron_out = SpectrometerC(mass_electron)// predefined function
Scalar rawtime1         = @abc_2.c.coinc.a_c_time_1
Scalar rawtime2         = @abc_2.c.coinc.a_c_time_2
Scalar rawtime3         = @abc_2.c.coinc.a_c_time_3
Scalar rawtime          = @abc_2.c.coinc.a_c_time_1
Scalar coincidenceTime  = @online.cacorr
Scalar Electron_Trigger = @online.C.trigger
#endif

//-----------------------------------------------------------------------------
// Now the interesting stuff
//-----------------------------------------------------------------------------
// description of virtual photon:

Fourvector Photon       = Electron_in - Electron_out
Fourvector CMS          = Photon + Target

Scalar E                = energy (Electron_in)
Scalar Eprime           = energy (Electron_out)
Scalar energytransfer   = energy (Photon)
Scalar momentumtransfer = momentum (Photon)
Scalar theta_e          = theta (Electron_out);
Scalar theta_deg        = theta_e  * degree
Scalar q2               = energytransfer^2 - momentumtransfer^2 
Scalar Q2               = -q2
Scalar epsilon          = (1-2*(energytransfer^2-q2)/q2 * tan(theta_e/2)^2)^-1
//-----------------------------------------------------------------------------
// Pionproduction
//-----------------------------------------------------------------------------
Fourvector missing = CMS - Proton
Fourvector pioncms = Rotate(Lorentz(missing, -CMS), Photon)

Scalar pPionCMS      = momentum(pioncms) *1000
Scalar pProton       = momentum(Proton)
Scalar thetaproton   = theta(Proton) * degree
Scalar deltathetap   = (theta(Proton)-theta(Photon)) * degree
Scalar omega	     = energy(Photon) *1000.0
Scalar TProton       = energy (Proton) - mass_proton
Scalar Emiss         = energy(missing) * 1000                      // MeV
Scalar Pmiss         = momentum(missing) * 1000                    // MeV/c
Scalar MissingMassSq = Emiss^2 - Pmiss^2
Scalar MissingMass   = sqrt(MissingMassSq) 
Scalar CMSangle      = theta(pioncms) * degree                     // degree
Scalar coscms        = cos(theta(pioncms))
Scalar W             = sqrt(energy(CMS)^2 - momentum(CMS)^2) * 1e3 // MeV 
Scalar DeltaW        = W - (mass_proton + mass_pi0) *1e3           // MeV

//-----------------------------------------------------------------------------
// And now the Histograms with some nice cuts
//-----------------------------------------------------------------------------
#define missMass   MissingMass     ("m_miss!", "MeV/c^2!",  5.0, 200.0, 390)
#define missMassSq MissingMassSq("m_miss!^2!", "MeV^2!/c^4!", 0,2e5,2000)
#define missE      Emiss           ("E_miss!", "MeV",      50.0, 200.0, 75)
#define missP      Pmiss           ("p_miss!", "MeV/c",     0.0, 150.0, 75)
#define ctime      coincidenceTime ("t_AC!",   "ns",     -100.0, 100.0, 800)
//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
Histogram "Timing/Coincidence Time"        ctime
Histogram "Timing/Raw time1"  rawtime1 ("t_AC!", "bin", 0.0, 2048.0, 2048)
Histogram "Timing/Raw time2"  rawtime2 ("t_AC!", "bin", 0.0, 2048.0, 2048)
Histogram "Timing/Raw time3"  rawtime3 ("t_AC!", "bin", 0.0, 2048.0, 2048)
Histogram abs(coincidenceTime<7) "Cut in t_AC!/Missing Mass"     missMass
Histogram abs(MissingMass - mass_pi0*1000)<10 \
          "Cut in Missing Mass!/Coincidence Time"     ctime
//WriteEvent @online.A.trigger && Electron_Trigger  \
//           && abs(MissingMass - mass_pi0*1000)<5 
WriteEvent @online.A.trigger && Electron_Trigger && \
           abs(coincidenceTime)<4












