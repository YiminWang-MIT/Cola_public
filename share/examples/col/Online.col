#include "Constants.col"

#undef timehistos

//-----------------------------------------------------------------------------
// Include rawdata histograms
//-----------------------------------------------------------------------------
#if #spectrometer(A)
#define SPECA
#include "Rawdata.col"
#endif
//-----------------------------------------------------------------------------
#if #spectrometer(B)
#define SPECB
#include "Rawdata.col"
#endif
//-----------------------------------------------------------------------------
#if #spectrometer(C)
#define SPECC
#include "Rawdata.col"
#endif
//-----------------------------------------------------------------------------
Scalar targetx = @online.Target.x
Scalar targety = @online.Target.y
Scalar targetz = @online.Target.z

#define dir "Target"
#include "Target.col"
#undefine dir
//-----------------------------------------------------------------------------
// Access to Particles and Setup:
//-----------------------------------------------------------------------------
Fourvector Electron_in  = Beam		              // predefined function
Fourvector Proton       = SpectrometerA(mass_proton)  // predefined function
Fourvector Target       = {mass_proton}               // That's Liquid Hydrogen

Scalar centmomA = (100 + @online.A.target.dp) / 660 * 630 - 100
Scalar centmomB = @online.B.target.dp
Scalar centmomC = (100 + @online.C.target.dp) / 490 * 459 - 100

#if #spectrometer(B)
Fourvector Electron_out = SpectrometerB(mass_electron)// predefined function
Scalar rawtime1         = @abc_2.a.coinc.a_b_time_1
Scalar rawtime2         = @abc_2.a.coinc.a_b_time_2
Scalar rawtime3         = @abc_2.a.coinc.a_b_time_3
Scalar rawtime          = @abc_2.a.coinc.a_b_time_1
Scalar coincidenceTime  = @online.abcorr
Scalar Electron_Trigger = @online.B.trigger
Scalar Centmomcut       = abs(centmomB) <= 7.5
Scalar electroncuts = abs(B.phi0) < 1.5 && \
                      @abc_2.a.coinc.a_b_time_1 < 4070 &&\
                      abs(B.theta0) < 4.01 && \
                      abs(B.fp.y) <= 20.0 && \
                      abs(centmomB) <= 7.5 && \
                      abs(B.y0) < 25
#endif

#if #spectrometer(C)
Fourvector Electron_out = SpectrometerC(mass_electron)// predefined function
Scalar rawtime1         = @abc_2.c.coinc.a_c_time_1
Scalar rawtime2         = @abc_2.c.coinc.a_c_time_2
Scalar rawtime3         = @abc_2.c.coinc.a_c_time_3
Scalar rawtime          = @abc_2.c.coinc.a_c_time_1
Scalar coincidenceTime  = @online.cacorr
Scalar Electron_Trigger = @online.C.trigger
Scalar Centmomcut       = abs(centmomC) <= 12.5 
Scalar electroncuts     = abs(centmomC) <= 12.5
#endif
//-----------------------------------------------------------------------------
// description of the virtual photon:
//-----------------------------------------------------------------------------
Fourvector Photon       = Electron_in - Electron_out
Fourvector CMS          = Photon + Target

Scalar E                = energy (Electron_in)
Scalar Eprime           = energy (Electron_out)
Scalar energytransfer   = energy (Photon)
Scalar momentumtransfer = momentum (Photon)
Scalar omega	        = energytransfer * 1000.0   // MeV
Scalar theta_e          = theta (Electron_out);
Scalar theta_deg        = theta_e  * degree
Scalar q2               = energytransfer^2 - momentumtransfer^2 
Scalar Q2               = -q2
Scalar epsilon          = (1-2*(energytransfer^2-q2)/q2 * tan(theta_e/2)^2)^-1
Scalar W                = sqrt(energy(CMS)^2 - momentum(CMS)^2) * 1e3 // MeV 

Counter TriggerA("Trigger in A: %8.0f") = (@online.A.trigger>0)
Counter TriggerB("Trigger in B: %8.0f") = (@online.B.trigger>0)
Counter TriggerC("Trigger in C: %8.0f") = (@online.C.trigger>0)
Counter TriggerAB("A and B:      %8.0f") = \
        (@online.A.trigger>0 && @online.B.trigger>0)
Counter TriggerAC("A and C:      %8.0f") = \
        (@online.A.trigger>0 && @online.C.trigger>0)
Counter TriggerBC("B and C:      %8.0f") = \
        (@online.B.trigger>0 && @online.C.trigger>0)
Counter TriggerABC("ABC:          %8.0f") = \
        (@online.A.trigger>0 && @online.B.trigger>0 && @online.C.trigger>0)

Histogram "Raw Timing/Time1"  rawtime1 ("t_Ae!", "bin", 0.0, 2048.0, 2048)
Histogram "Raw Timing/Time2"  rawtime2 ("t_Ae!", "bin", 0.0, 2048.0, 2048)
Histogram "Raw Timing/Time3"  rawtime3 ("t_Ae!", "bin", 0.0, 2048.0, 2048)

Histogram "Raw/Coincidence Time" ctime
























